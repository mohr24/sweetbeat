<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set var
move_force_x = 200;
max_speed = 2;
start_x = x;
start_y = y;
jump_force = -160;
phy_fixed_rotation = true;

var max_num = 100;


time_span = 1.0;
snd_playing = 0;





btn_array[max_num] = 0;  // button mapping to note


input_array[max_num] = 0; // input button and step
input_step_array[max_num] = 0;



span_step = room_speed * time_span;
cur_step = 0;
total_step = 0;

tolerent = 10;
process_step = 20;
//window_step = 30;

face_direction = 1;//-1 for left. 1 for right

action_text[max_num] = "";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set action

action_cnt = 0;
action_array[max_num,max_num] = 0; // action array
action_step_array[max_num,max_num] = 0;

var i = 0;
//move 
i+=1;
action_array[i,0] = 2; //command length
action_array[i,1] = snd_Ab; //note id : 1st note acquired
action_array[i,2] = snd_Ab;
action_step_array[i,0] = 0; //command id see spt_process 
action_step_array[i,1] = 0; //1st step always 0
action_step_array[i,2] = 10;
action_text[i] = "Move."

//turn
i+=1;
action_array[i,0] = 1; //command length
action_array[i,1] = snd_Ab; //note id : 1st note acquired
//action_array[i,2] = snd_Ab;
action_step_array[i,0] = 1; //command id see spt_process 
action_step_array[i,1] = 0; //1st step always 0
//action_step_array[i,2] = 10;
action_text[i] = "Turn."

//jump v
i+=1;
action_array[i,0] = 2; //command length
action_array[i,1] = snd_A; //note id : 1st note acquired
action_array[i,2] = snd_Ab;
action_step_array[i,0] = 2; //command id see spt_process 
action_step_array[i,1] = 0; //1st step always 0
action_step_array[i,2] = 10;
action_text[i] = "Jump."

//dash
i+=1;
action_array[i,0] = 2; //command length
action_array[i,1] = snd_A; //note id : 1st note acquired
action_array[i,2] = snd_A;
action_step_array[i,0] = 3; //command id see spt_process 
action_step_array[i,1] = 0; //1st step always 0
action_step_array[i,2] = 10;
action_text[i] = "Jump."

//attack
i+=1;
action_array[i,0] = 3; //command length
action_array[i,1] = snd_A; //note id : 1st note acquired
action_array[i,2] = snd_Ab;
action_array[i,3] = snd_A;
action_step_array[i,0] = 4; //command id see spt_process 
action_step_array[i,1] = 0; //1st step always 0
action_step_array[i,2] = 10;
action_step_array[i,3] = 20;
action_text[i] = "Attack."
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set alarm

alarm0_cnt = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set notes

note_array[max_num] = 0; // note currently contain
note_array[0] = 0;       // count

note_array[1] = snd_Ab;
note_array[2] = snd_A;
note_array[3] = snd_Bb;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move

if (alarm0_cnt == 0) { alarm0_cnt = 20; }
//image_xscale = face_direction;
physics_apply_force(phy_position_x,phy_position_y,move_force_x * image_xscale,0);
alarm0_cnt -= 1;
if (alarm0_cnt &gt;0){
    alarm[0]=1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///animation
phy_speed_x = max(min(phy_speed_x,max_speed),-max_speed);


if (phy_speed_x &gt; 0.1 || phy_speed_x &lt; -0.1){
    sprite_index = spr_player_moving;
    image_speed = abs(phy_speed_x) / 10;
}
else{
    sprite_index = spr_player;
    image_speed = 0.2;
}
background_x[0] = - phy_position_x / 5;
background_y[0] = - phy_position_y / 5;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///action

cur_step += 1;
total_step += 1;


if (cur_step &gt;= span_step){
    cur_step = 0;
    //audio_play_sound(snd_click,10,false);
}
if (input_array[0] &gt; 0){
    var num_posi = 0;
    var cmd_len = 0;
    var act = -1;
    for (var i = 1;i&lt;=action_cnt;i++){
        var tmp_action;
        tmp_action[0] = action_array[i,0];
        for (var j=action_array[i,0];j&gt;=1;j--){ tmp_action[j] = action_array[i,j]; }
        var tmp_action_step;
        tmp_action_step[0] = action_step_array[i,0];
        for (var j=action_array[i,0];j&gt;=1;j--){ tmp_action_step[j] = action_step_array[i,j]; }
        
        
        var pre = spt_match(tmp_action,tmp_action_step,input_array,input_step_array,tolerent);
        if (pre == action_array[i,0] and cmd_len &lt; pre){
            cmd_len = pre;
            act = i;
        } else if (pre == input_array[0]) {
            //if (input_array)
            var d1 = total_step - input_step_array[input_array[0]];
            var d2 = action_step_array[i,input_array[0]+1] - action_step_array[i,input_array[0]];
            if (d1-d2) &lt;= tolerent{
                num_posi += 1;
            }
        }
        
    }
    if (num_posi == 0){
        if (act != -1){
            spt_process(id,action_step_array[act,0]);
        }
        else{
            cmd_len = 1;
        }
        input_array[0] -= cmd_len;
        for (var i = 1;i&lt;=input_array[0];i++){
            input_array[i] = input_array[i + cmd_len];
            input_step_array[i] = input_step_array[i + cmd_len]; 
        }
    }
    

}

/*
if (input_array[0] &gt;0 and total_step - input_time_array[input_array[0]] &gt;= process_step){
    var start = 1;
    while (input_cnt&lt;=start){
        
    }
    input_cnt = 0;
}
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///make this happen
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//move left
image_xscale = 1;
physics_apply_force(phy_position_x,phy_position_y,move_force_x,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//move left
image_xscale = -1;
physics_apply_force(phy_position_x,phy_position_y,-move_force_x,0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phy_position_x = start_x;
phy_position_y = start_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw

draw_self();

draw_set_colour(c_black);

if (btn_array[0] != note_array[0]){
    draw_set_halign(fa_center);
    draw_set_font(fnt_0);
    draw_text(x,y-64,"Assign this note#by press a button.");
}

var x1 = x - 10,y1 = y - 128,x2 = x + 10,y2 = y - 108,width = 3;
draw_rectangle(x1-width,y1-width,x2+width,y2+width,false);
draw_set_color(c_white);
draw_rectangle(x1,y1,x2,y2,false);
draw_set_color(c_green);
draw_rectangle(x1,y1,x1 + (1 - cur_step / span_step) * (x2-x1),y2,false);

draw_set_color(c_black);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///jump

physics_apply_impulse(x,y,0,jump_force);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///play music

var isFound = false;
var key = keyboard_lastkey;

for (var i=1;i&lt;=btn_array[0];i++){
    //if keyboard_check(btn_array[i]){
     if (btn_array[i] == key){
        isFound = true;
        audio_stop_sound(snd_playing);
        snd_playing = audio_play_sound(note_array[i],10,false);
        input_array[0] += 1;
        input_step_array[input_array[0]] = total_step;
        input_array[input_array[0]] = note_array[i];
        break;
    }
}

if (not isFound and btn_array[0] &lt; note_array[0]){
    btn_array[0] += 1;
    btn_array[btn_array[0]] = key;    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>1</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>1</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.100000001490116</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>2,2</point>
    <point>22,2</point>
    <point>22,32</point>
    <point>2,32</point>
  </PhysicsShapePoints>
</object>
