<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grav = .5;
hspd = 0;
vspd = 0;
jmpspd = 14;
movespd = 7;
control = false;
spawnx = x;
spawny = y;
punchstep = 0;
punchspd = 15;
punchdir = 0;
punchdist = sprite_width * 1.5;
punchframes = 25;
jmptrigger = false;
punchtrigger = false;
divetrigger = false;
spawntrigger = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>305</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_timeline_set</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>14</kind>
            <timeline>tm_jmp</timeline>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>haxis = gamepad_axis_value(0, gp_axislh);
vaxis = gamepad_axis_value(0, gp_axislv);
if (control)
{
    jmptrigger = gamepad_button_check_pressed(0, gp_face1);
    punchtrigger = gamepad_button_check_pressed(0, gp_face2);
    divetrigger = gamepad_button_check_pressed(0, gp_face3);
    spawntrigger = gamepad_button_check_pressed(0, gp_face4);
}

move = 0;
if (abs(haxis) &gt; .25)
    move = haxis;
hspd = move * movespd;
if (vspd &lt; 10)
    vspd += grav;
if (jmptrigger)
{
    jmptrigger = false;
    vspd = -jmpspd;
    audio_play_sound(snd_jmp, 10, false);
}
if (divetrigger)
{
    divetrigger = false;
    move_contact_solid(270, room_height);
    vspd = 0;
    hspd = 0;
    audio_play_sound(snd_pound, 10, false);
}
if (punchtrigger)
{
    punchtrigger = false;
    if (abs(haxis) &lt; .5 &amp;&amp; abs(vaxis) &lt; .5)
        punchdir = 0;   // no direction
    else if (abs(haxis) &gt; abs(vaxis))
        punchdir = 2 - sign(haxis); // 1 for right, 3 for left
    else
        punchdir = 3 + sign(vaxis); // 2 for up, 4 for down
    punchstep = punchframes;
    if (!instance_exists(obj_swipe))
        instance_create(x, y, obj_swipe);
    audio_play_sound(snd_swipe, 10, false);
}
if (punchstep &gt; 0)
{
    switch (punchdir)
    {
    case 0: // no dir - not used
        hspd = 0;
        vspd = 0;
        break;
    case 1: // right
        hspd = punchspd;
        vspd = 0;
        break;
    case 2: // up
        vspd = -punchspd;
        hspd = 0;
        break;
    case 3: // left
        hspd = -punchspd;
        vspd = 0;
        break;
    case 4: // down
        vspd = punchspd;
        hspd = 0;
        break;
    }
    punchstep -= 1;
    if (punchstep == 0)
    {
        with (obj_swipe)
        {
            instance_destroy();
        }
        vspd = 0;
        hspd = 0;
    }
}
if (spawntrigger)
{
    spawntrigger = false;
    x = spawnx;
    y = spawny;    
    audio_play_sound(snd_die,10,false);
}

if (!place_free(x+hspd,y))
{
    if (hspd &gt; 0)
        move_contact_solid(0, hspd);
    else
        move_contact_solid(180, -hspd);
    hspd = 0;
}
x += hspd;

if (!place_free(x, y+vspd))
{
    if (vspd &gt; 0)
        move_contact_solid(270, vspd);
    else
        move_contact_solid(90, -vspd);
    vspd = 0;
}
y += vspd;

if (punchstep &gt; 0)
{
    obj_swipe.x = x;
    obj_swipe.y = y;
    switch (punchdir)
    {
    case 0:
    case 1: // right
        obj_swipe.x += punchdist;
        obj_swipe.image_angle = 0;
        obj_swipe.image_xscale = 1;
        break;
    case 2: // up
        obj_swipe.y -= punchdist;
        obj_swipe.image_angle = 90;
        obj_swipe.image_xscale = 1;
        break;
    case 3: // left
        obj_swipe.x -= punchdist;
        obj_swipe.image_angle = 0;
        obj_swipe.image_xscale = -1;
        break;
    case 4: // down
        obj_swipe.y += punchdist;
        obj_swipe.image_angle = 90;
        obj_swipe.image_xscale = -1;
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spawntrigger = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
