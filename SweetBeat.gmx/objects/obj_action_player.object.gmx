<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set color
x_offset = -40;
y_offset = -80;
width = 32;
height = 32;
frame = 3;
current_index = 0;
block_width = 0.5;


with(obj_manager){
    other.sprites[ command.stall] = spr_stall_icon;
    other.sprites[ command.blast] = spr_blast_icon;
    other.sprites[ command.jump] = spr_jump_icon;
    other.sprites[ command.none] = spr_none_icon;
}


x = x_offset;
y = y_offset;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move

x = obj_player.x + x_offset;
y = obj_player.y + y_offset;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw
var fpmN = obj_manager.bpm* obj_manager.fpb;

var w = width * obj_manager.bpm;// array_length_1d(obj_manager.sequence);
var x1 = x,y1 = y,x2 = x + w,y2 = y + height;
draw_set_color(c_black);
draw_rectangle(x1-frame,y1-frame,x2+frame,y2+frame,false);
draw_set_color(c_white);
draw_rectangle(x1,y1,x2,y2,false);
draw_set_color(c_green);

for (var i = 0; i &lt; array_length_1d(obj_manager.sequence); i += 1)
{
    var pair = obj_manager.sequence[i];
    var time = pair[0];
    var action = pair[1];
    //var x1 = other.x1 + i * other.width;
    //var y1 = other.y1;
    //var x2 = x1 + other.width;
    //var y2 = other.y2;
    //draw_set_color(sprites[action]);
    //draw_rectangle(x1 + i * width,y1, x1 + (i+1) * width,y2,false);
    with(obj_manager){
        var fpm = bpm*fpb;
        if (((counter - 1)/fpb &lt;= time &amp;&amp; counter / fpb &gt; time)
    || ((counter + fpm - 1)/fpb &lt;= time &amp;&amp; (counter + fpm) &gt; time))
        {
            //draw_set_color(c_white);
            other.current_index = (i) % array_length_1d(obj_manager.sequence);        
        }
    }
    //draw_set_color(sprites[action]);
    //draw_rectangle(x1 + time * width,y1, x1 + (time + block_width) * width,y2,false);
    draw_sprite_stretched(sprites[action], -1, x1 + time * width,y1, block_width * width, height);
    
    
    var counterN = obj_manager.counter;
    
    draw_set_alpha(0.5);
    draw_set_colour(c_black);
    
    draw_rectangle(x1,y1,counterN/fpmN * (x2-x1) + x1,y2,false);
    
    draw_set_alpha(1);
    
    
    /*if (i == current_index){
        draw_set_color(c_white);
        draw_rectangle(x1 + i * width + 10,y1 + 10, x1 + (i+1) * width - 10,y2 - 10,false);
    }*/
}

draw_set_color(c_black);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
