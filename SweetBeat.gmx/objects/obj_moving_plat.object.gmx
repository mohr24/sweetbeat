<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_moving_plat</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_solid_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// wait for creation code

// set these
path = -1;
beats = 1;
reset_trigger = undefined;
move_trigger = undefined;   // if move_trigger is set, it will not move on the beat
one_way = false;    // the platform doesn't move twice unless it is reset
one_way_spent = false;

// others
x_vel = 0;
y_vel = 0;
next_pos = 0;
path_active = false;
path_reversed = false;

x_start = x;
y_start = y;
x_prev = x;
y_prev = y;

initializing = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// the path must be corrected

if (path_reversed)
    path_reverse(path);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// check creation code status

if (initializing)
{
    initializing = false;   // only do once
    ppf = path_get_length(path) / (obj_manager.fpb * beats);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// do path execution

if (path != -1)
{
    if (CheckTrigger(reset_trigger))
    {
        path_end();
        path_active = false;
        if (path_reversed)
            path_reverse(path);
        path_reversed = false;
        x = x_start;
        y = y_start;
        one_way_spent = false;
    }
    
    if (path_index == -1 &amp;&amp; path_active)
    {
        path_active = false;
        path_reverse(path);
        path_reversed = !path_reversed;
    }
    
    if ((!one_way || !one_way_spent) &amp;&amp; path_index == -1 &amp;&amp; Ternary(is_undefined(move_trigger), CheckCommand(command.plat_move), CheckTrigger(move_trigger)))
    {
        path_start(path, ppf, path_action_stop, false);
        one_way_spent = true;
        path_active = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// do path collision checking

x_vel = x - x_prev;
y_vel = y - y_prev;

var epsilon = 0;

if (place_meeting(x,y,obj_player))
{
    var d = Quadrant(id,obj_player);
    
    if (d == quadrant.left || d == quadrant.right)
    {
        obj_player.x_vel = x_vel;
        if (d == quadrant.right)
        {
            obj_player.x = bbox_right + obj_player.sprite_width / 2 + epsilon;
            ds_list_add(obj_player.next_collisions_left, id);
        }
        else if (d == quadrant.left)
        {
            obj_player.x = bbox_left - obj_player.sprite_width / 2 - epsilon;
            ds_list_add(obj_player.next_collisions_right, id);
        }
    }
    else if (d == quadrant.bottom || d == quadrant.top)
    {
        obj_player.x_vel_ground = x_vel;
        obj_player.y_vel = y_vel;
        if (d == quadrant.bottom)
        {
            obj_player.y = bbox_bottom + obj_player.sprite_height / 2 + epsilon;
            ds_list_add(obj_player.next_collisions_top, id);
        }
        else if (d == quadrant.top)
        {
            obj_player.y = bbox_top - obj_player.sprite_height / 2 - epsilon;
            ds_list_add(obj_player.next_collisions_bottom, id);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// update previous values

x_prev = x;
y_prev = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// the player collided with us

if (obj_player.x_vel_remain != 0)   // x direction collision
{
    obj_player.x_vel = x_vel;
}
else if (obj_player.y_vel_remain != 0)  // y direction collision
{
    obj_player.y_vel = y_vel;
    if (obj_player.y_vel_remain &gt; 0)    // downwards collision
        obj_player.x_vel_ground = x_vel;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// manual draw

DrawSpritePartitioned(sprite_index,image_index,16,16,16,16,x,y,sprite_width,sprite_height);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
