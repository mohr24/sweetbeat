<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// initialize

ini_name = room_get_name(room) + ".ini";

ini_open(ini_name);

times = ds_list_create();
deaths = ds_list_create();

add_time = -1;
add_death = -1;

death_mode_count = 0;
time_mode_count = 0;

time_chunk = 3;

index = 0;
while(true)
{
    var time = ini_read_real("time", string(index), -1);
    if (time != -1)
        ds_list_add(times, round(time/time_chunk));
    var death = ini_read_real("death", string(index), -1);
    if (death != -1)
        ds_list_add(deaths, death);
    if (time == -1 &amp;&amp; death == -1)
        break;
    index++;
}

ini_close();

initialized = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// calculate metrics


if (!initialized)
{
    initialized = true;
    ini_open(ini_name);
    if (add_time != -1)
    {
        ini_write_real("time", string(index), add_time);
        ds_list_add(times, round(add_time/time_chunk));
    }
    if (add_death != -1)
    {
        ini_write_real("death", string(index), add_death);
        ds_list_add(deaths, add_death);
    }
    ini_close()
    ds_list_sort(times, true);
    ds_list_sort(deaths, true);
    var time = -1;
    var cur_count = 0;
    for (var i = 0; i &lt; ds_list_size(times); i++)
    {
        var next_time = ds_list_find_value(times, i);
        if (next_time != time)
            cur_count = 0;
        time = next_time;
        cur_count++;
        time_mode_count = max(time_mode_count, cur_count);
    }
    var death = -1;
    cur_count = 0;
    for (var i = 0; i &lt; ds_list_size(deaths); i++)
    {
        var next_death = ds_list_find_value(deaths, i);
        if (next_death != death)
            cur_count = 0;
        death = next_death;
        cur_count++;
        death_mode_count = max(death_mode_count, cur_count);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// clean up

ds_list_destroy(times);
ds_list_destroy(deaths);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw the score

if (time_mode_count &gt; 0 &amp;&amp; death_mode_count &gt; 0)
{
    var width = 256;
    var height = 128;
    
    var space = 16;
    
    var start_time = ds_list_find_value(times, 0);
    var end_time = ds_list_find_value(times, ds_list_size(times)-1);
    var start_death = ds_list_find_value(deaths, 0);
    var end_death = ds_list_find_value(deaths, ds_list_size(deaths)-1);
    
    var bar_width_t = width / (end_time - start_time + 1);
    var bar_height_t = height / time_mode_count;
    var bar_width_d = width / (end_death - start_death + 1);
    var bar_height_d = height / death_mode_count;
    
    draw_set_color(c_black);

    draw_line(x,y - height - space, x + width, y - height - space);
    DrawAsGraph( x, y - height - space, start_time, bar_width_t, bar_height_t, times);
    
    draw_line(x,y, x + width, y);
    DrawAsGraph( x, y, start_death, bar_width_d, bar_height_d, deaths);
    
    var scale = .2;
    
    draw_set_valign(fa_top);
    draw_set_halign(fa_center);
    draw_text_transformed(x,y - height - space, string(start_time*time_chunk)+"s",scale,scale,0);
    draw_text_transformed(x + width - bar_width_t, y - height - space, string(end_time*time_chunk)+"s",scale,scale,0);
    draw_text_transformed(x,y,string(start_death)+"d",scale,scale,0);
    draw_text_transformed(x + width - bar_width_d, y, string(end_death)+"d",scale,scale,0);
    
    draw_set_color(make_color_rgb(238, 0, 0));
    draw_line_width( x + bar_width_t*add_time, y - height - space, x + bar_width_t*add_time, y - height - space - height, 3 );
    draw_line_width( x + bar_width_d*add_death, y, x + bar_width_d*add_death, y - height, 3);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
