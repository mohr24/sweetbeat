<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_beat</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// audio variables

current_music = noone;

music_progress = 0;
second_tolerance_min = -.075;
second_tolerance_max = .025;

audio_advance = obj_lag.audio_lag / room_speed

audio_sound_set_track_position(obj_manager.music, audio_advance);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// check background music status

if (audio_is_playing(obj_manager.music))    // check progress
{
    music_progress++;
    var music_pos_predicted = (music_progress / room_speed) + audio_advance;
    var music_pos_actual = audio_sound_get_track_position(current_music);
    var music_pos_diff = music_pos_actual - music_pos_predicted;
    if (music_pos_diff &lt; second_tolerance_min || music_pos_diff &gt; second_tolerance_max)
    {
        audio_sound_set_track_position(current_music, music_pos_predicted);
        show_debug_message("ERROR LAGGING - music corrected:");
        show_debug_message(music_pos_diff);
    }
}
else if (obj_manager.down_beat)
{
    music_progress = 0;
    current_music = audio_play_sound(obj_manager.music, 10, false); // restart on down beat
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// advance audio

if (CheckCommandLag(command.jump))
    audio_play_sound(snd_jump,10,false);
if (CheckCommandLag(command.swipe))
    audio_play_sound(snd_swipe,10,false);
if (CheckCommandLag(command.plat_move))
    audio_play_sound(snd_plat_move,10,false);
if (CheckCommandLag(command.plat_toggle))
    audio_play_sound(snd_plat_toggle,10,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
